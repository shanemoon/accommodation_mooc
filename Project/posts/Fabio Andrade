Thursday September 5th 2013 4:00 pm -04:00,Good afternoon guys!My friend and I have been spending quite some time into learning python and weve messed with some codes trying to count files folders and objects in a directory but we kinda feel that this code isnt good enough.Could you guys give us some tips regarding it?import osimport os.pathos.system(color 70)                                                                   # Changes background color of prompt.os.system(cd\\)                                                                       # Goes back into root directory.w = (str(input(Type the directory where you want the program to count : )))os.system(cd  + str(w))os.system(dir + str(w))                                                               # Shows files modification dates sizes and folders in a directory by prompt command.print()print(================= Files List ================= )print(os.listdir(path=w) )                                                         # Check and name all folders and files in the directory.K = len([item for item in os.listdir(path=w) if os.path.isdir(os.path.join(w item))])  # Check every object in the directory to separate folders from files.L = len([item for item in os.listdir(path=w) if os.path.isfile(os.path.join(w item))]) # Check every object in the directory to separate files from folders.print(Number of files in the directory:  K )                                    # Print number of files.print(Number of folders in the directory:  L )                                  # Print number of folders.print(Number of objects in the directory:  (K + L) )                            # Print number of objects.os.system(pause)Thanks a lot!,None,0
Thursday September 5th 2013 7:15 pm -04:00,Also do you think comments using # are useful or just needed when the code is somewhat confusing?By the way thanks for the tips I rearranged the code following it this is the result:import osimport os.path# Changes background color of prompt.os.system(color 70)os.system(cd\\)directory = (str(input(Type the directory where you want the program to count : )))# Shows files modification dates sizes and folders in a directory by prompt command.os.system(cd  + str(directory))os.system(dir + str(directory))print()print(================= Files List ================= )# Check and name all folders and files in the directory.print(os.listdir(path=directory) )# Check every object in the directory to separate folders from files.folders = len([item for item in os.listdir(path=directory)               if os.path.isdir(os.path.join(directory item))])# Check every object in the directory to separate files from folders.files = len([item for item in os.listdir(path=directory)             if os.path.isfile(os.path.join(directory item))]) print(Number of files in the directory:  folders )print(Number of folders in the directory:  files )print(Number of objects in the directory:  (folders + files) )os.system(pause),None,0
Thursday September 12th 2013 3:22 pm -04:00,Pat you should think of it as something like If it is A it should be transformed into T but if its G it should be transformed into C and not T again.==== EDIT ====Sorry about this info I confused some things here forget what was written here.There are simple ways of doing that but using if statements its going to get a little longer., Resolved,0
Wednesday September 11th 2013 6:08 pm -04:00,Ive been studying some basic codes and Im very interested in Tkinter but Id like to ask for some help regarding the input of information.I created a very simple interface with 2 buttons and an entry and created a module with every function needed to count vowels consonants letters and special characters and list them.Id like to know how the info that is put into the entry box passes to the module as a variable making it work. I tried it as many ways as I can think and it still didnt work.Tkinter code:import letters_modulefrom Tkinter import *class Count:    def __init__(self parent):        f = Frame(parent)        f.pack(padx=15 pady=15)        self.entry = Entry(f)        self.entry.pack(side = LEFT padx = 25 pady = 15)        self.button = Button(f text=Analyze Word command=letters_module.word_details)        self.button.pack(side = RIGHT padx = 10 pady = 10)        self.exit = Button(f text=Close command=quit)        self.exit.pack(side = RIGHT padx = 10 pady = 10)        root = Tk()root.title(Counting Letters)count = Count(root)root.mainloop()letters_module:*Since I think the code would be too much of a burden to read here I posted it on pastebin:http://pastebin.com/tqnZ4EMUI thank you in advance for the help.Regards!,None,0
Thursday September 12th 2013 3:31 pm -04:00,Are you using codes like this:return True << The right oneor like this?return True << The wrong oneThe True statement necessary for evaluation need to be a bool value not a string., Resolved,0
Thursday September 12th 2013 3:27 pm -04:00,did you define the function before placing statements?e.g.def get_complement(nucl):if nucl == A:  return T, Resolved,0
Thursday September 12th 2013 3:45 pm -04:00,I advise you take your code off your post its against the honor code to post any code that is working correctly since yours is most likely going to work.==== EDIT ====Try rewriting your code from the scratch following pre-made identations and spaces when you press enter I rewrote it here and it worked wonders.pay attention to your identation it should be something like:def example_function(parameter):|   |< This space before writing the code is called identation and its needed to define       the order things happen and which command is inside which command.     if parameter > 0:       return parameter + 50     else:       return parameter + 30, Resolved,0
Tuesday September 17th 2013 8:40 am -04:00,Its not exactly a slice it just works as one.before_vowel refers to an empty string so every character the loop encounters that is not a vowel is inserted into this string which results in a string containing all characters before the first vowel where the loop ends.It works like this:before_vowel = > Loop happens and find the letter Zbefore_vowel = Z> Loop happens and find the letter ybefore_vowel = Zy> Loop happens and find the letter mbefore_vowel = Zym> Loop happens and find the letter ubefore_vowel = Zym and the loop ends., Unresolved,0
Friday September 27th 2013 10:32 am -04:00,The only thing this function has to do is verify if either def board_contains_word_in_row or def board_contains_word_in_column returns True if it does then the board contains such word.If one returns True and the other doesnt contains_word should return True.board_contains_word_in_row ----- board_contains_word_in_column ----- board_contains_word#                                                                                                                                                  ##                   TRUE                                          FALSE                                          TRUE             ##                   TRUE                                          TRUE                                            TRUE             # #                   FALSE                                        TRUE                                            TRUE             ##                   FALSE                                        FALSE                                          FALSE            ##=========================================================================#, Unresolved,1
Friday September 27th 2013 11:01 am -04:00,oh yeah yeah my bad.Im already editing my post., Unresolved,0
Friday September 27th 2013 10:55 am -04:00,First of all yes. That commands are important for you to know because it is directly related to files management when using python.Even though Ill be writing a brief explanation of the commands make sure you rewatch the videos in order to have a better understanding of this and dont forget PRACTICE MAKES PERFECT!Ill try to give you a brief explanation on how these commands work check it out:file = open(text.txt r) # This second parameter refers to which manner you open the file                                (e.g. r for reading w for writing and                                a for appending(adding data without overwriting).#Since I defined variable file with the file opened I can use it to manipulate the file how I want.file.readline() #This command read line per line every time its executed. Since its the first time itll read                  the 1st line of the file;# 1st execution: Little john was walking in the park# 2nd execution: And his sister was talking to himfile.readlines() #This command reads every line setting each line into a list using different indexes. #             Index 0                                 Index 1[Little John was walking in the park And his sister was talking to him]file.read() # This command reads every line disregarding newline commands ().Little John was walking in the parkAnd his sister was talking to himfor line in file:         # This command youll be checking line per line in the text because it considers every	print(line)       # line of the text as an independent string.                          # For the Print built-in you have 2 ways of taking the  off your string.                          # You can use print(line end=) or print(line.strip())I hope it helps you understand everything., Unresolved,7
Friday September 27th 2013 3:12 pm -04:00,the read() method reads EXACTLY what is in the file.If the file is written using  to have the function of Enter itll read this  and print it if you will.My explanation was based in a normal .txt file written like this:Little John was walking in the parkAnd his sister was talking to himIf  is placed in the end of the phrase strip() or end =  is needed in order to take it off from there.I hope you understood it better now., Unresolved,1
Friday September 27th 2013 10:36 am -04:00,In my opinion its kind of strange for them to evaluate things omiting the open command since the lectures were all about reading writing and appending and how we open and manipulate this files., Unresolved,0

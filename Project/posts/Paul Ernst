Friday August 30th 2013 11:26 am -04:00,The parameter is a number of seconds since midnight as an integer.Using the examples given:    >>> get_hours(3800)    1    >>> get_minutes(3800)    3    >>> get_seconds(3800)    20, Unresolved,0
Friday August 30th 2013 2:25 pm -04:00,>ImportError: No module named a1From the assignment:Save it in the same directory as your a1.py file.Do you have them in the same directory as it cant find a1.py?, Unresolved,0
Friday August 30th 2013 7:05 pm -04:00,Im not at my computer with Python on it. You opened another window loaded a1.py edited it saved it and then hit the tab called run module so the first window could see it? Maybe theres another way to do this but Im a beginner too!, Unresolved,0
Friday August 30th 2013 2:33 pm -04:00,In my code I get -1.65?, Resolved,0
Friday August 30th 2013 8:06 pm -04:00,Almost identical to step 2 with one additional operation to convert to hours., Resolved,0
Friday August 30th 2013 10:46 pm -04:00,Does the computer do division from left to right? If it divides 60/60 first you end up dividing the first part by 1! You may just want to add a set of parenthesis or divide by 3600 to make it unambiguous., Resolved,0
Saturday August 31st 2013 8:42 am -04:00,yes that is good and makes it clear which operations come first., Resolved,0
Monday September 2nd 2013 11:16 am -04:00,I would rather have the Mars Bar!,None,0
Sunday September 1st 2013 10:23 pm -04:00,You should have submitted a1.py with the required changes. In my case I did step 2 saved it as step2.py and submitted that and received partial credit as per the instructions. Did step 3 saved as step3.py submitted that and got a little more credit etc. You might try reloading a1.py and do just one step to see if you receive partial credit., Resolved,3
Sunday September 1st 2013 11:49 pm -04:00,The Autotester is back up per the link you posted., Resolved,0
Sunday September 1st 2013 11:13 pm -04:00,Then it would be 41/42 not 42/41., Unresolved,0
Monday September 2nd 2013 1:04 am -04:00,This shows 42/41 which is what I thought you meant. What you have posted is that all possible points is 42 and you have a 41., Unresolved,0
Monday September 2nd 2013 9:42 am -04:00,> the only assignment that I have access to is assignment 2.Assignment 2 is not posted yet only Assignment 1 posted under Week 2.  Assignments    	                  Week 2 (collapsed click to expand)CompletedWeek 2 Assignment (Assignment 1)    , Unresolved,1
Monday September 2nd 2013 10:43 am -04:00,>It gives me a syntax errorIt would be helpful if you said what syntax error it gave you. I pasted your code and it asked for an indent after that it worked fine., Resolved,0
Monday September 2nd 2013 10:46 am -04:00,Can you post a screenshot?, Resolved,0
Monday September 2nd 2013 10:55 am -04:00,The first stuff in red on the left says square_return is not defined. That is the important part. If you type dir() in the shell it lists your defied functions. In the window on the right (wish I knew what that was called) you need to go to run and run module after you save it.I dont think you can put def in the shell. Only in the window in the right., Resolved,0
Monday September 2nd 2013 10:51 am -04:00,Actually in the shell itself I open a new window. Paste the code there.def square_return(num):    return num**2def square_print (num):    print (The square of num is num**2)Go to the tab up top where it says run then run module. It will ask you to save it. Save it and then it should run. Back in the shell  and type:square_return(2) and it should return 4., Resolved,0
Monday September 2nd 2013 11:01 am -04:00,subroutines cant go in the shell. They have to be saved first then run. When you run them they restart the shell so you should have got a restart message in the shell which I dont see. Just practice with it it will get easier. Use dir() to list what defs you have running., Resolved,0
Monday September 2nd 2013 11:05 am -04:00,Oh the window on the right is the Edit window the other is the Shell., Resolved,0
Monday September 2nd 2013 5:34 pm -04:00,VetonThe assignment was just rewritten/clarified at Step 2 with detailed step by step instructions. Do you have Python installed and running? I think that was half the battle for some people. If so download the assignment and the a1.py starter code. Step 2 requires a return statement with a mathematical function. Save it run and test it and submit it. You should get a partial credit for the one line of code. Continue from there. Here are the instructions but best to get there by the assignments page.http://spark-public.s3.amazonaws.com/programming1/a1/a1.html, Resolved,0

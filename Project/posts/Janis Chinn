Tuesday September 10th 2013 7:33 pm -04:00,Youll have 3 hours to complete final exam and can only submit once., Resolved,8
Tuesday September 10th 2013 7:51 pm -04:00,Tracing is meant to help cement your understanding of what exactly is happening when you run your code. By first verifying that you understand what is happening and then running it through a visualizer or debugger (or even manually debugging it by running) you can ensure that you are correct in what you think should happen and prevent yourself from making changes simply to achieve the right answer without actually understanding why those changes get you the correct answer., Unresolved,1
Wednesday September 11th 2013 8:30 pm -04:00,The Python Visualizer is probably a good tool for working out how to do this by hand. You can practice predicting what the next step will be and what things will be in the stack at that time then actually step through the visualizer and see whether or not you were right., Unresolved,2
Sunday September 15th 2013 5:42 am -04:00,You dont need to literally trace it you just want to follow how the program will execute by hand. Rachels example below is very good although you should probably also keep track of what variables have been defined at a given point in your program and what values they refer to at any given time. Basically you want to try to recreate what the visualizer would show you but you do it by hand to ensure that you know whats going on., Unresolved,2
Tuesday September 10th 2013 7:47 pm -04:00,Since you can omit the end point when slicing to get slice from beginning through the end of the string its not actually that bad. For instance in your example you could simply say s[9:] to retrieve Program in its entirety., Resolved,0
Tuesday September 10th 2013 6:50 pm -04:00,You dont need to know how many times the loop will run. Python will handle this for you. You want to loop over the input and check each letter to see if it is a valid nucleotide and somehow track whether youve found an invalid input. The assignment covers a few ways to do this., Resolved,0
Tuesday September 10th 2013 6:57 pm -04:00,Could you give some more details on what exactly youre having trouble with?, Resolved,1
Tuesday September 10th 2013 7:28 pm -04:00,Since you are given a sequence and just need to count the number of times a given nucleotide appears its not necessary to use looping or conditionals. (Certainly you can accomplish this by using loops but it isnt necessary.) Theres a str method which is covered in the lecture videos which will help you here.ETA: Are you trying to accomplish something outside of the scope of the assignment? In that case you could use counter variables for each nucleotide to create a running total of each nucleotide in a given DNA sequence., Resolved,1
Sunday September 15th 2013 10:19 pm -04:00,There is no certificate with distinction for this course.,None,0
Monday September 16th 2013 12:16 am -04:00,You dont need to handle the empty string at all-- it should pass on its own. For invalid cases you want to follow the directions in the assignment (I believe it asks you to return False)., Pinned Approved Unresolved,0
Friday September 13th 2013 4:38 pm -04:00,There may not be a single Best Way to do a given task but since this is Python there is probably a Most Pythonic way even limiting answers only to the techniques we have learned. Especially for the kind of simple tasks were performing for these beginning assignments theres also certainly a Best Practice method for achieving certain end goals. For instance although its definitely not wrong to re-test to assign complements in get_complementary_sequence but its more Pythonic (and generally Best Practice) to avoid repeating tasks youve already coded for (and thus avoid introducing error) and simply recycle the code from get_complement. For more on this idea: type import thisinto IDLE. In particular the first four lines of the result are relevant here. (We havent progressed far enough for the rest to mean much yet.), Unresolved,0
Friday September 13th 2013 5:05 pm -04:00,The assignments are well designed in terms of creating opportunities to practice more complex programming and giving us opportunities to learn a first way. I dont think its necessary to go over answers that were ruled out in the instructions (by using str methods for all the functions) but I dont see the harm in going over Best Practices ways of designing the functions within the constraints of the assignments. Of course any answer that gets the job done is better than answers that fail but once youve got an answer that works it can be very helpful to see how you could improve upon that answer to prevent yourself from introducing human error or to keep you from writing unnecessary code in the future.I disagree that there is no best or better way of doing it-- there may not be a best way in every case but there might be at least a better way as in the example I suggested in my last post. In doing the assignment in the first place you accomplish the goals of the assignment: to give practice in using new techniques and allow you to discover a first way to solve problems. After the assignment is completed and these goals accomplished however there is still room to learn. This is why so many people are requesting answer keys in the first place. Even if their way was already the better way to solve the problem it instills confidence that theyre on the right track something many beginner programmers seek. If their way was different it gives them a chance to learn an alternative solution to the problem and to discover the differences and pros and cons behind each solution., Unresolved,1
Friday September 13th 2013 5:11 pm -04:00,http://en.wikipedia.org/wiki/There%27s_more_than_one_way_to_do_it, Unresolved,0
Friday September 13th 2013 5:35 pm -04:00,The len() function doesnt change the value of your variable so its not converting your str to an int. All it does is look at whatever argument is passed to it and determines the number of characters (the length) of that argument. So it takes a str (not exclusively but for the sake of simplicity well say it anyway) and returns an int but the original str is unchanged., Resolved,0
Friday September 13th 2013 4:25 pm -04:00,temperature > 28 is a boolean expression meaning it does nothing when it stands alone as it does in your example. An else cannot be qualified by any conditions-- it will fire when all ifs and elifs associated with it have failed., Unresolved,0
Friday September 13th 2013 5:25 pm -04:00,s.lower() and s.upper() are str methods while s.isdigit() is a boolean which returns true when the value is a digit. If s = Sdf you can fill in the expression piece by piece and see that it doesnt make a lot of sense.sdf or SDF or FalseKeep in mind that you arent comparing in the first two pieces of your boolean (s.lower or s.upper) youre just transforming the string. If you want to say is it lower case upper case or a digit you should use s.islower() and s.isupper()., Resolved,3
Friday September 13th 2013 5:29 pm -04:00,I just tested it on my code and it did return 6., Unresolved,0
Friday September 13th 2013 6:31 pm -04:00,Can you correct your formatting and repost? Its hard to diagnose as is., Resolved,0
Friday September 13th 2013 6:54 pm -04:00, and   are not the same. One is an empty string () and you can think of any string as having each character followed by an empty string:abc == abcI dont think thats really whats happening but it might help you to understand how its being counted.  is not empty-- it is a string consisting of one space. Since there are no spaces in abc your function would return 0., Resolved,0
Friday September 13th 2013 8:14 pm -04:00,Yes thats right., Resolved,0
Sunday September 15th 2013 5:37 am -04:00,Since the assignment directions have so far both directed us to submit incomplete code it might be nice to reduce the restriction. I actually specifically ignored that direction in the second assignment because I knew it wasnt going to take me a full hour to complete the rest of the assignment., Unresolved,1
Sunday September 15th 2013 2:46 pm -04:00,If so far youve written the function header type contract and description your code should run but not output anything. You must add the function body at a minimum to get output., Unresolved,0
Monday September 16th 2013 12:23 am -04:00,I used a for loop to go through letter by letter and appended the complement to a variable Id initialized with an empty string value before the loop., Unresolved,1
Monday September 16th 2013 12:24 am -04:00,To Python any given string contains an empty string () which I suspect is why..., Unresolved,1
Sunday September 15th 2013 2:44 pm -04:00,It is not required to use get_complement() in this function but its probably a good idea to do so. (Also the instructors have specifically said that this function is meant to be an exercise in doing just that.), Unresolved,0
Sunday September 15th 2013 10:00 pm -04:00,    You need to score 70% or higher on the coursework in order to earn a certificate.https://class.coursera.org/programming1-002/wiki/view?page=courselogistics Youve missed the hard deadlines for several assignments but if you can get Exercise 3 done before tomorrow and you complete all other assignments and exercises and score 100% on the final you can get an 80%. This means youve got 10% of wiggle room in order to get a certificate of completion. So its not too late but youll want to get going right away if you want the certificate.,None,2
Monday September 16th 2013 12:34 am -04:00,If you go to https://www.coursera.org/course/programming1 and click the blue Add to watchlist button Coursera will email you when the course is to be offered again. Best of luck!,None,2
Monday September 16th 2013 12:13 am -04:00,Its possible your get_complement() function is causing get_complementary_sequence() to fail. Do you have any print() statements? If so replace them with return statements (or simply delete them if you have both) and try that?, Resolved,0
Monday September 16th 2013 12:30 am -04:00,Two suggestions for your get_complement() function:Try using == instead of is to test the value of char.You dont need to do this in two separate for loops (and in fact you probably shouldnt)-- youre allowed as many elif statements in a conditional as youd like (its only the if statement that begins the conditional and the else that optionally ends it that are limited to one per).Hope that helps!, Resolved,0
Monday September 16th 2013 12:43 am -04:00,Does it work if you simplify your count_nucleotides function to use a one line return statement? You should be able to use the count method...count(...)    S.count(sub[ start[ end]]) -> int        Return the number of non-overlapping occurrences of substring sub in    string S[start:end].  Optional arguments start and end are    interpreted as in slice notation., Resolved,1

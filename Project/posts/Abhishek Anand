Friday October 4th 2013 4:13 am -04:00,Modify this line column_index in range(len(board)):Take the length of 1 element present inside  of board not the length of the board as you have to traverse through column to column . That should solve this issue . , Resolved,0
Friday October 4th 2013 3:51 am -04:00,I had the same problem 36/37 . Look at function def board_contains_word_in_column(board word):     (list of list of str str) -> bool    Return True if and only if one or more of the columns of the board    contains word.    Precondition: board has at least one row and one column and word is a    valid word.    >>> board_contains_word_in_column([[A N T T] [X S O B]] NO)    False        for char in range(len(board)):        if word in make_str_from_column(boardchar):            return True    return FalseThere is something missing in below line of function  :for char in range(len(board)):. You need to send the length of one element present  inside board not of board. , Resolved,0
Friday October 4th 2013 4:05 am -04:00,- For final Submission you dont have to open  input file  ; its already open . ------------------If you are trying to run that locally  : (I copied last two function in a separate test.py file )Inside read_words :  file = open(words_file r)>>> wordlist1=C:\GitHub\MOOC\LTP-Python\wordlist1.txt >>> wordlist1C:\\GitHub\\MOOC\\LTP-Python\\wordlist1.txt>>> read_words(wordlist1)  ## test.py contains read_words [CRUNCHY COWS EAT GRASS]Hope this helps ., Resolved,1
Friday October 4th 2013 4:27 am -04:00, This will help you to iterate through file . ---------------file = open(words_file r)for line in file:        ##Your Operation return -------------, Resolved,1

Sunday September 1st 2013 5:09 pm -04:00,The argument passed to convert_to_celcius is the function usa_city_temperature.convert_to_celcius accept only a parameter that would represent Fahrenheit.usa_city_temperature returns a value that represent Fahrenheit.You can use the return of one function as the argument of another if the returned value is an accepted match., Unresolved,0
Tuesday September 3rd 2013 11:05 pm -04:00,TamaraHow can we help you? What part are you not understanding as a whole?Since you mentioned get_hours already. Let see about that one first. The objective of this function is to convert the given number of seconds into how much of an hour would be or even if it is more than an hour and return what number in a digital clock of 24 hours would that be.How would you do that with pencil and paper?seconds divided by 3600 (seconds in hour) right?    * Do this part in python and save the result in a variable. Use the double // so you dont get a decimal. (This would be hour(s) or zero for part of an hour)If the objective were just that you could just return that variable. However it is possible that the seconds would translate to more hours that a day have.  Thus you need to use the provided function to_24_hour_clock(after you finished later) and compute how many turns around 24 hours it goes before it represents the final position in the clock.   * We do that by returning the function to_24_hour_clock inside get_hours passing that variable to it. i.e. return a_function(resulted_variable)And the get_hours function is done! Of course this is not the end. Now you need to fix the to_24_hours_clock to return the right position hour around the clock.The module operator % can help you with that.4 % 2 returns 0 meaning it 2 fits perfectly into 43 % 2 returns 1 because 2 fits into 3 exactly one time and 1 remains.15 hours % 24 hours_clock return 15 since 24 does not fit into 15. Thats position 3 P.M.10 % 24 returns 10 since 24 does not fit into 10. Thats position 10 A.M. in the clock.25 % 24 returns  1 since 24 does fit 1 time into 25 and 1 remains. Thats 1 A.M. in the clock.Thats the solution to return in the to_24_hour_clock, Unresolved,9
Friday September 6th 2013 10:50 pm -04:00,Is it possible you forgot to implement the following last part from the instructions in your get_hours()?:(You should call to_24_hour_clock to convert the number of full hours to a time on a 24 hour clock. This means that the return value should be in the range 0 to 23 inclusive.)                , Resolved,0

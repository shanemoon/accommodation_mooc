Tuesday September 10th 2013 6:09 pm -04:00,Hi V. KIf s1 = kimono  and s2 =o then  s1.find(s2) = 3.  Your expression would become s1.find(s2 6) and would not find the second o.  I think that the code needs to work for any example for it to be considered correct., Unresolved,2
Monday September 16th 2013 12:03 pm -04:00,def insert_sequence(dna1indexdna2):           Is it your intent to say     dna1 = CCGG         (strintstr) -> str                                                                               index = AT               >>> insert_sequence(CCGGAT2)                                                  dna2 = 2    ?   Also your current return statement will always place dna2 at index 2. You should use index (a variable) not the value 2  for other values (like your second example) to work., Unresolved,1
Monday September 16th 2013 12:35 pm -04:00,return dna1 + index + dna2                     This return does not slice at all.  Returns entire dna1 followed by entire dna2.return dna1[:2] + dna2 + dna1[2:]           This return would always slice at 2 (inserts dna2 at position 2) regardless of index value. You need to be able to slice at different places hence you should use a variable instead of the 2 in the brackets., Unresolved,0
Sunday September 15th 2013 2:15 pm -04:00,Hi AB MS & AnonAre you checking the parameter (DNA sequence) for all 4 nucleotide types?  Is your method capable of handling parameters of different lengths and with repeating nucleotides?  For example TA  returns AT ; ATACAG returns TATGTC;  CCTT returns GGAA.  I got the points after getting these three examples to work.  Hope this is of some help to you., Unresolved,0
Monday September 30th 2013 6:17 pm -04:00,HiOn the video lecture we were told that tuples are immutable., Resolved,2
Thursday October 3rd 2013 10:10 pm -04:00,The question refers to a dictionary ({key0:value0 key1:value1...}) whose values are lists(d = {a: [1 3] b: [5 7]}). You are trying to change one of the  lists ; that is were the type (what you call prefix) comes from., Unresolved,0

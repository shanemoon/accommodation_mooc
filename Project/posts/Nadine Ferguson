Wednesday September 11th 2013 12:29 am -04:00,SianaThe to_24_hour_clock function is the last step to the process.  You have to do your calculations first because all that function does is take your end result and convert it to 24 hour time.  So think about the first utc function.  The process is:1) Determine the offset from utc+0.  This will be a positive or negative number.2) Then consider the actual time.  In the first example in the Docstring there is:>>> time_to_utc(+0 12.0)    12.0So theres no offset from utc+0 and the local time is !2:00.  This would probably be somewhere in the utc+0 zone itself.  However in the third example:>>> time_to_utc(-1 12.0)    13.0This is an offset of an hour before utc+0.  If you are twelve hours away from utc+0 and you take yet another hour back (-1) you are now thirteen hours away. If however as in the second example:>>> time_to_utc(+1 12.0)    11.0Being twelve hours away and t he offset is one forward you are now eleven hours away.  It might be easier to think of a 24-hour clock with numbers 0 through 23 and move the hour hand closer or further from the 0.So first you have to figure out the time according to this process then thats what gets placed in the to_24_hour_clock function.  Hope that helps., Unresolved,2
Wednesday September 11th 2013 6:24 pm -04:00,Running the program first is just a check to see if things are operating correctly.  If you get the correct answers in Python then its a good bet your submission will be good., Unresolved,0
Tuesday September 10th 2013 11:05 pm -04:00,Well Aaron beat me to the punch but heres my two cents as well:Way way back in Lecture 2 - 3 Python as a Calculator it was stated that there were three types of symbols used for dividing numbers.  / is float division // is integer division and % is remainder division.  Therefore3800 / 60 will give you the minutes as a float - 63.333333333333336  Just by looking at the number ahead of the decimal point you can tell that you have 1 hour and three minutes which is exactly what they say in the overview for Step 5.  Now if you type>>> 3800 % 60You will get 20 which is the remainder of seconds left over.  Once again this is the value stated in the overview of Step 5.   These are the things you have to keep in mind when working on get_hours get_minutes and get_seconds.  The assignment for writing the body of get_hours requires you to use to_24_hour_clock in the function.  Since all you have to worry about in the get_hours function is the hours you can use the integer division or:>>> 3800 // 60 // 60  Use this as your guideline for writing the get_hours function.  And always run a test of the math in IDLE to make sure you get the results you need.  Do that even before you write the body and that should help a lot., Resolved,1
Tuesday September 10th 2013 11:10 pm -04:00,Hmm...well... There are 3600 seconds in an hour so 3600 seconds leaves no minutes since that makes one full hour.  But 3800 seconds leaves 200 seconds remaining.  Thats what you have to deal with as an example to get minutes.  At the end of your calculations you should wind up with 3 minutes 20 seconds.  But again all you have to worry about is the minutes., Resolved,0
Friday September 20th 2013 6:01 pm -04:00,MasenRemember when youre doing a check for a certain character you have to set up in the function what youre checking for.  And in this case youre checking for two characters not just one.  So substrings are involved in this case.  Youll be checking dna1 for a substring that contains dna2.  Hope that helps., Resolved,1
Friday September 20th 2013 7:06 pm -04:00,The substring function is covered in video lecture 6 - 2 str indexing and slicing.  Since youre checking for two letters at a time you have to slice dna1 into two-character segments and then compare them to dna2 for a match., Resolved,1
Tuesday September 24th 2013 3:43 pm -04:00,We arent allowed to use string methods in this assignment.  Otherwise it definitely would be a piece of cake., Resolved,0
Friday September 20th 2013 7:54 pm -04:00,Looked like there were still people having problems thus my post...outta here., Resolved,0
Wednesday September 25th 2013 10:57 pm -04:00,Using the print statement is fine.  Doesnt hurt anything.  What you do have to look out for is the indentation.  Python is a stickler for it.  Your code should actually look like this:i = 1523result = 0while i <= 10503:     result = result + i     i = i + 2     print(result)Do it that way and the code will print the end result of the math each and every time until it reaches the end value.  Thats because all the lines indented are considered to be part of the while statement.  But if you do this:i = 1523result = 0while i <= 10503:     result = result + i     i = i + 2print(result)it will only print out the final answer because the print statement is considered to be outside the loop. If its any help consider the layout of the comments above.  Your message Joses Alinas and mine are all in line with each other.  But the replies to Joses message are indented to show they are replies to his message.  If Joses message was a while loop all the comments to him would be like lines of code within that loop.  Then when the loop is done Alina is the next line of code., Unresolved,2
Sunday September 29th 2013 5:21 pm -04:00,You didnt strip out the  character with the strip command?, Unresolved,1
Sunday September 29th 2013 3:25 pm -04:00,I thank you most sincerely for the pseudocode.  I believe it will point me in the right direction., Unresolved,0
Sunday September 29th 2013 5:15 pm -04:00,Been making some amazing progress.  I owe you a beer or tea or whatever it is you like as a beverage.  : ), Unresolved,0
Wednesday October 2nd 2013 2:49 am -04:00,Was that done with a while loop?, Unresolved,0
Wednesday October 2nd 2013 3:00 am -04:00,A not defined error usually means theres been a misspelling among the variables.  My program didnt work because of a letter s - I used word_file instead of words_file.  Since the function read_words uses words_file as the argument the code was searching for a file that didnt exist.  As a result my program crashed because choosing the word file is the first thing the driver does., Unresolved,0
Wednesday October 2nd 2013 3:13 am -04:00,When you access the lines in the file they need to be referred to by the index.  For instance words_file[line] could be interpreted as words_file[0] words_file[1] words_file[2]...whatever the value in line is.  But in order to do that you need to specify a range.  So the first line in the for next loop would look more like:for line in range(len(words_file)): Hope that helps., Unresolved,0
Wednesday October 2nd 2013 3:16 am -04:00,You cant use the print statement in any of your code.  And the rstrip should be for  not /n.  Your code may be trying to remove a symbol that isnt there., Unresolved,0
Sunday September 29th 2013 2:28 am -04:00,According to the A3 FAQ https://class.coursera.org/programming1-002/forum/thread?thread_id=2443  you cant open the files in the a3 program.  A3 driver already opens them up for you.  So if you pull the lines that open and close the file you should be good to go., Unresolved,0
Sunday September 29th 2013 9:54 pm -04:00,Ive been slogging through this code had the driver working up until it came to finding words.  it only accepted COWS as a valid entry so I knew I had a problem with my word search code.  I tried some fixes that seemed to work in Python but when I updated the code the driver doesnt work at all now.  I see an error message but it flashes by too quickly for me to read it.Is there any way to make the game pause to allow reading of the error messages?  I need to see it Ive got only one last shot to submit my code and time is running out.  , Resolved,0
Sunday September 29th 2013 10:20 pm -04:00,Found it - use F5 on the driver file it will open IDLE and run and the error shows up when it crashes.  And for those of you who already knew this good for you have a cookie on me.  : ), Resolved,0
Sunday September 29th 2013 10:25 pm -04:00,One letter.  My program crashed because of ONE LETTER.  Egad.  O__o, Resolved,0
Sunday September 29th 2013 10:33 pm -04:00,And now for the admission of true idiocy.  Exercises have the submit limit of 5 times not the Assignments.  I was going crazy for nothing...sigh., Resolved,0
Sunday September 29th 2013 10:47 pm -04:00,And...done.  One letter and one number tore up the entire code.  Amazing., Resolved,0
Wednesday October 2nd 2013 7:53 pm -04:00,Maybe this will help:Say you have a single carton of eggs and you want to make a huge omelet so you plan to break all the eggs into a bowl.  You take the first egg crack it drop the contents into the bowl.  Then you get the second egg the third and so on until the carton is empty.  You have just performed a for next loop.  Imagine if each space in the carton that held an egg was numbered from 0 to 11 (remember all counts begin with zero) and you broke each egg in sequence.  So what you did was:for egg in range(len(carton)):     cracked_eggs = cracked_eggs + carton[egg]The range statement takes the value of the length of the carton.  The value of egg will begin with 0 the first position in the carton.  So the first value of cracked_egg = carton[0].  The bowl starts out empty until the first egg gets added to it.  Then the value of egg increments so now cracked_egg = carton[1].  That egg joins the first in the bowl.  Another iteration (geek for loop) and now cracked_egg = carton[2].  In goes the third egg.  And so on until you reach carton[11].  All the eggs are cracked and youre ready to make the omelet., Unresolved,0
Wednesday October 2nd 2013 7:06 pm -04:00,len(board) means the entire list.  len(board[0]) means one of the lists inside the list.  For instance in the docstring this board is used as an example:[[A N T T] [X S O B]]If you wanted to access the first list with A N T T you would use board[0].  If you wanted the second one you would use board[1].  If you use len(board) you will get the contents of the outermost list which is two lists - the first with A N T T is one list and the second list with X S O B is the other.  If you get more specific and type len(board[0]) you get the number of values in the list of A N T T which is four.Think of it like a drawer in a filing cabinet.  In that drawer you have two file folders marked 0 and 1  (remember the counts start with zero).  In each folder there are four sheets of paper with letters on them.  If you count the number of folders there are two.  But when you look in one of the folders you see the number of papers in that folder which is four.  If you were busy at your computer and you wanted someone to get some of those papers for you - say from the first folder youd say top drawer folder 0 which would tell them exactly where to find the papers you want.  So to get a specific paper from that folder:top_drawer[0][0] would be the first folder first paper in that folder which would be A.  top_drawer[0][1] is the first folder second paper which has N on it. top_drawer[0][2] is the third paper with T.top_drawer[0][3] is the last paper with T again.Try it in the Python shell; copy the board place it in a variable named top_drawer and use those commands.  Watch what happens.And to answer your question about converting the text file you want to take the list of list of string and turn it into a single string not the other way around.  This will make up the body of the make_str_from_row function.  Writing the code necessary to make this function work was covered in video lecture 6 - 2 str indexing and slicing and 6 - 4 for loop over str.  Pay particular attention to the later half of 6 - 4 where Prof. Campbell creates a vowel accumulator to collect the vowels found in the words Happy Anniversary!.Hope that helps., Unresolved,2
Wednesday October 2nd 2013 7:26 pm -04:00,Prof. Campbell explains how to compare characters in lecture 8 - 2 from around 4 mins in.  Note how when she works out the examples for the process she has the two words arranged atop each other and they resemble a column.  Instead of counting however you will be collecting the characters and thats covered in lecture 6 - 4 as I mentioned above.  , Unresolved,0
Thursday October 3rd 2013 10:00 pm -04:00,Toms got you covered two posts above.  ^__^, Unresolved,0
Friday October 4th 2013 6:08 pm -04:00,^__^, Unresolved,0
Thursday October 3rd 2013 9:41 pm -04:00,In your line of code letter = letter +  you are adding an empty string.  The empty string is the accumulator which should be set up at the beginning.  To that you must add each letter in turn and they all have indexes.A is board[0][0]N is board[0][1]T is board[0][2]T is board[0][3]Also you dont really need to initialize i because the range function takes care of it for you by default.  So what you should have is:letter = You dont need to put row_index in another variable since its a variable in itself.  So after your for next loop which is:for i in range(len(board[row_index]))):You need to create the line that accumulates the letters.  Look at the indexes I listed above.  One is a constant [0] and the other changes [0] [1] [2] [3].  So the actual next line would be:letter = letter + ???????Im sure you can figure that one out., Unresolved,1
Friday October 4th 2013 6:01 pm -04:00,Welcome.  I had my own ordeal trying to puzzle this stuff out and with the deadline coming up I hate to see ppl still stuck on it.  Im not as good at it as Tom is but I try., Unresolved,0
Thursday October 3rd 2013 9:57 pm -04:00,Thats a LOT prettier than what I did.  Jealous...  O__o, Unresolved,1
Wednesday October 2nd 2013 8:39 pm -04:00,Anne that error message is probably because the indexes in your code need to be reversed.  If you get enough AssertionErrors for read_board in a row eventually youll get a message that says FAILURE: AssertionError.  False is not true : Board not loaded correctly. Did you get rows and columns mixed up?I swapped my indexes after I got that message and zap - problem fixed., Resolved,0
Saturday October 5th 2013 3:02 pm -04:00,Just a matter of spelling - the file is actually named wordlist1.txt., Unresolved,2
Friday October 4th 2013 6:32 pm -04:00,You might be making the code print the file instead of return it.  Remember that a file has the  at the very end to show where it stops.  And for this project youre not allowed to use the print code in the final program though it is useful to check the output while testing in the IDLE shell., Unresolved,0
Friday October 4th 2013 8:21 pm -04:00,Okay...Since this is the weekend before the Oct. 7 deadline lets get these functions solved so everyone can move on to the last Exercise and the Final Exam.  Ill be making several posts in this thread as I track down the most helpful suggestions for figuring out the code.  I plan to give credit where credit is due but if I miss out please know that Im not doing that on purpose.START AT THE STARTSo first things first.  Heres an overview of the programming task you are trying to accomplish:The a3 driver file is the executable file that runs the game.  The file a3 is called upon several times by the driver to perform repeated tasks used in the scope of the game.  Because of this some of the code is split between the two files.  This is what is causing what appears to be one of the biggest problems with figuring out the code - use of the open() statement.  This is done by the driver and you dont need to use it...but you do.  Confusing?  Read on.In the a3 driver near the bottom of the file you have this:# Load the words list.words_file = askopenfile(mode=r title=Select word list file)words = a3.read_words(words_file)words_file.close()# Load the board.board_file = askopenfile(mode=r title=Select board file)board = a3.read_board(board_file)board_file.close()Notice the lines in bold.  This is where your program comes in.  The a3 driver opens the file (either wordlist1 or board1) gives control to a3 (your program) to process the information then it closes the file up again.  This makes writing the code a little tricky.  You can use the open and close commands while creating the function and testing it but once youre done and youre certain the file works you must remove those commands for the file to work.  Otherwise you get the DisabledBuiltinError when your code gets tested by the Autograder. With me so far?  Okay lets go to read_board..., Resolved,2
Friday October 4th 2013 11:50 pm -04:00,To create the code for read_board youll need to use a nested for next loop.  This nested loop should collect each letter in a line remove the  character place the final results in a list then place that list in another list.  Heres a visual example that may help.  Lets say we have a bunch of shapes and we want to put each group into a box then put each box of shapes into a crate.  This is a nested loop - a for next loop inside of a for next loop.  The setup may look a little like this:NOTE:  the term dot isnt actually a valid entry for the code by the way.  Its just there to help you understand the logic of the process.  Also the container used in this example represents information already taken from a file and prepared for processing.  As a review check the lecture in Week 6 for reading files.  Professor Gries gives different examples of how a file can be opened and read.  So whats going to happen here?  Lets look at the code line by line.The first for next loop will work with a range with the maximum length of the container.  This container has three elements numbered 0 through 2.  If we substitute the actual value for the length of container in place of the variable we get:for i in range(2):This means the range for the variable i will be 0 then 1 then 2.  For the first iteration our little friend here will be dealing with container[0] the first value in i.  The next line of code requires him to create a box:The next command starts the inner for next loop which states:for shape in range(len(container[i])):So the inner for next loop will determine the length of the values in container[0].  The variable shape will contain this value in this case a range of 0 through 5.  If we plug in the actual values for i and shape now we get:for 0 in range(2):     for 0 in range(len(6)):So our little person here will now deal with container 0 and the first shape inside it at position 0.  The shape will be added to the box and the little green dot will be removed (stripped) from it:And he will continue until all the contents of container[0] have been added to the box:Lastly the box will be added to the crate.The code will now go to the outer for next loop.  The value of i becomes 1 and the value of shape returns to 0.  Then a new box will be created:Then as the lines in the inner loop are executed the shapes in container[1] will be added to the box then the box will be added to the crate.  Ill spare you a repeat of the images for the last box; just assume the green stars are treated in the same way.This is how the logic of the for next loop works.  For the assignment in a3 youre working with the board1 file and using this same process.  Look it over carefully and you should be able to figure it out.  Good luck!  ^__^, Resolved,6
Saturday October 5th 2013 2:30 pm -04:00,You wont be working directly with words_file.  Instead you should save it to a temporary variable and use the information from that variable to work with.  The container in the example above is what that represents.  I overlooked that will update to make it clearer.  Thanks!, Resolved,0
Saturday October 5th 2013 12:01 am -04:00,Whew that last post took some time to create.  O__oNow on to read_words.  This one is simple if youve figured out the logic behind the process above.  You dont even have to deal with a nested for next loop.  Each line in the wordslist1 file simply needs the  removed and the words appended to a single list.  Just remember that you have to open and close the file manually to test it then drop those lines when you transfer them to a3., Resolved,1
Saturday October 5th 2013 12:51 am -04:00,Yeah theres a way to streamline it and not use the nested for next - I didnt do it myself.  But trying to explain that probably would have made things more confusing.  Im not as clever as you are when it comes to explaining such things.  If you want to correct feel free.  Thats part of what this is about...as a matter of fact I think you already did cover it I just couldnt locate it right off the bat., Resolved,0
Saturday October 5th 2013 1:15 am -04:00,Ah whoopsie...my bad.  O__o  I will fix that.  , Resolved,0
Saturday October 5th 2013 2:12 pm -04:00,I cant improve upon something thats already perfect.  Theres all kinds of useful advice in that post - not just for creating the code but for programming in general.  I mean up until now for me KISS usually meant a crazy rock band.  , Resolved,0
Saturday October 5th 2013 12:56 am -04:00,By the way I was going to put your awesome make_str_from_row and make_str_from_column details here if thats ok with you., Resolved,1
Saturday October 5th 2013 1:26 am -04:00,And now for something completely different:The following comes from a post created by Tom Enos.  Its an excellent explanation for the handling of make_str_from_row and make_str_from_column.  ----------------------------------make_str_from_column----------------------------------create a temp variableuse a for loop to loop over every row in the board     add to your temp variable the character in the row located at column indexreturn your temp variablea lot of people are making this one harder then it needs to be but there is a trick (kind of a trick) you just need to think in 2Dcreating a temp variable is just creating a variable to hold the accumulated word and we create it and set it to an empty stringexample a = the loop is nothing fancy refer to for loops video in week 4 the loop with out range and len methods.examplefor variable in str: # instead of a str loop over a list    bodythe body of the loop is where we need to think in 2D here we use that temp variable we created and use it to concatenate all the character that make up a column into a string think week 2 and for the 2D part str: indexing and slicing from week 4 each row in the board has one character from the column in it and it is in the same index in every rowlook at the lecture note at this examplehttps://d396qusza40orc.cloudfront.net/programming1/lecture_summaries%2Fweek4%2Findexing.htmls = Learn to ProgramThe first character of the string is at index 0 and can be accessed using this bracket notation:>>> s[0]L>>> s[1]efor our problem think of indexes as columns or column_indexs1 = qazs2 = gbts3 = dces1[1]as2[1]bs3[1]ccreate a temp variable temp = now think of a list with these words in itlst = [qaz gbt dce]and use a for loop on the list in the body concatenate all in character at index 1 of every item in the listfor item in lst:   temp = temp + item[1]print(temp)abcindex 1 can be any valid index and you could return the temp variable instead of printing itsee we only used concepts up to week 4 to do this problemjust because you have information from the later week does not mean that you need to use it when solving a problemthink simple first then add your newer knowledge if you need to but always start with the simplest firstremember back to week 1 and ask if I can use something to solve a problemthen the same for week 2 and then week 3 etc...  stopping when you find your answer and when you do find that answer dont keep looking past where you find your answer  that will only make things harderlook above we can solve this problem with only using information upto week 4  so using week 5 and week 6 information like len and range only make it harder.a piece of advice in programming is use the old KISS principle  http://en.wikipedia.org/wiki/KISS_principleand python can remind you of this if you want it to  open a shell and type import this without the quotes and press enter-----------------------------make_str_from_row-----------------------------create a temp variableuse a for loop to loop over every character in the row you need    add to your temp variable the character you get from the for loop return your temp variablecreating a temp variable look at above examplethe loop is nothing fancy refer to for loops video in week 4 the loop with out range and len methods.examplefor variable in str: # instead of a str loop over a list                             # but unlike the make string from column                             # we are going to use just one row from the board                             # and that will be the one row in the board at index [row_index]    bodythe body of the loop is where we do the work here we use that temp variable we created and use it to concatenate all the character that make up the row into a string so for example in the snip of code above in the for loop variable is used to hold a character from str we just want to add that variable to our temp variabletemp = temp + variablethen return your resultsor use the .join() methodaList = [a b c].join(aList)abc, Resolved,0
Saturday October 5th 2013 1:58 am -04:00,Okay...its late here on the east coast - 1:54 am.  Turning in for the evening.  Good luck to everyone working on Assignment 3 hope you get to where you need to be!  ^__^, Resolved,0
Saturday October 5th 2013 2:05 pm -04:00,Remember that Python is a stickler for indentations.  I know this wont look like much but adjust your code so it looks like this:string = for i in board[row_index]:     string = string + ireturn stringThe line for the string variable the command for the for next loop and the return line should be all lined up with each other and those lines must all be lined up with the docstring.  The line string = string + i must be indented four spaces.  The error message you got is usually connected with a spelling error of some kind but your spelling is fine so I blame Pythons demand for indents.  It has tripped me up many times with this program., Resolved,0
Saturday October 5th 2013 3:40 pm -04:00,Check to see which read command youre using to access the file.  , Resolved,0
Saturday October 5th 2013 3:20 pm -04:00,Youre most welcome.  Glad to be of help.  : ), Resolved,0

Monday August 19th 2013 3:57 pm -04:00,Maybe this is due to a difference between the underscore on a Mac (which she was using in the tutorial) and a standard PC keyboard. I have tried all the underscores and similar that I can see in the Character Map on my PC and none work although copying it from the post above does. Staff please advise how to get this character on a PC keyboard. I copied the character into the search box in Character Map and it said No character available. I have saved the character __ in a Notepad file and copying it from there works OK so this is a workaround until someone comes up with a better solution., Resolved,2
Wednesday August 21st 2013 3:04 am -04:00,I think maybe the confusion arose because many people (including me) thought that it was a single character (may be it is on the Mac I dont know). If the tutorial said a double underscore then I missed it.If anyone is still confused try a double underscore from your keyboard., Resolved,0
Sunday September 1st 2013 5:40 pm -04:00,If I write a function and choose RUN Module it does a restart and any other function I was just using gives a NameError not defined., Resolved,0
Monday September 2nd 2013 2:30 am -04:00,thanks Sep. I had not realised that I should be working on the complete a1.py - I had split a1.py into different files for each exercise., Resolved,0
Monday September 9th 2013 3:23 pm -04:00,I am getting this error: if dna1[char:char+len(dna2)] == dna2:TypeError: Cant convert int object to str implicitlyI am trying to compare dna2 with part of dna1. dna1 and dna2 are strings char is an index and len(dna2) should be an integer, Resolved,0
Monday September 9th 2013 3:30 pm -04:00,Yes:for char in dna1:        if dna1[char:char+len(dna2)] == dna2:            return True else:        return False, Resolved,0
Monday September 9th 2013 3:40 pm -04:00,Thanks Tom, Resolved,0
Wednesday September 11th 2013 7:02 am -04:00,But I think you are wrong about the else. As it is indented under the for and not the if it applies to the for ie it is executed if the code falls through the loop without a return. Anyway it works., Resolved,0
Wednesday September 11th 2013 7:02 am -04:00,Thats certainly shorter but I wanted to practise the for loop., Resolved,0
Tuesday September 17th 2013 12:40 pm -04:00,Square brackets  are used to enclose both a list and an index/slice. Sometimes it will be obvious eg [a b c] must be a list and [2:4] must be a slice but how about [1] is that an index or a list? Is it simply that lists are stand alone objects and indexes/slices are attributes of objects? So s[1] would be an index and s=[1] would be a list?, Unresolved,3
Sunday September 22nd 2013 8:23 am -04:00,Understanding and learning is one thing being able to recall and use it later is another and can only be achieved with practice. IMHO there is not enough practice built into this course. So I have set my own problems. If there is anyone else out there that agrees we can share them. Both these examples could be improved by validating the input. In the first a challenge is to consolidate the body of the loop into a single line. In the 2nd there is an error in that 2 will not be reported as prime if the starting value is 1 and the for loops could be replaced by while loops. Try improving my code and post your own problems:1) Choose a sequence that converges to pi and show how fast it converges. My solution:# This program uses Gregorys series to estimate pi to any required precision# pi/4 = 1 - 1/3 +1/5 - 1/7 +1/9 ....import maths = int(input(How many iterations?: ))p=4for n in range (3s+14):    p=p-4/n    p=p+4/(n+2)    print (np)2) Write an efficient program to print out primes in a given range. My solution:import maths = int(input (starting value - positive odd integer please: ))f = int(input (finishing value - ditto: ))# A number is prime if no odd divisor less than the square root of it leaves zero remainderfor n in range (sf+12):    for k in range (3int(math.sqrt(n) + 1)2):        if n % k == 0:            break    else:        print (n is prime)        ,None,0
Monday September 23rd 2013 2:31 pm -04:00,Given numbers = [[1 2] 3 [4 5]] give an expression using indexing (with positive indices) on numbers that evaluates to 4.My solution:2*numbers[0][1]works when I paste it in Idle but is marked as incorrect., Resolved,1
Monday September 23rd 2013 4:19 pm -04:00,numbers[0][1] is 2 so twice this is 4. The questions asks for an expression that evaluates to 4. There are many ways of combining the numbers in the nested list to get 4 but the given correct answer says:Explanation: numbers[2] evaluates to the last sublist. By appending [0] to that expression we can index into that sublist to get 4. I do not follow. What is the expression?, Resolved,1
Tuesday September 24th 2013 3:48 am -04:00,IMHO both the question and the explanation are badly worded. In the question it is clear from their answer that zero is regarded as positive and the word evaluate suggests that some computation is asked for. In the explanation the use of the word append is unfortunate as this is a reserved Python word and misleads the unwary into thinking that the list method append is to be used., Resolved,3
Sunday September 29th 2013 3:10 pm -04:00,If you call a function say test that returns True or False it seems to me that calling the function then saying if True..... does not work. The code in the if statement is always executed whether the function returned True or False. So what you have to do is say if test....Similarly text.rstrip() seems to do nothing! You have to put text=text.rstrip(). I find it amazing that Python does not report an error but then just ignores the code.I hope this helps someone. It cost me a couple of hours !, Unresolved,0
Tuesday October 1st 2013 7:30 am -04:00, , Resolved,0
Thursday October 3rd 2013 5:11 pm -04:00,Thanks to everyone involved in running this course. It was not perfect  (but what is?) however even your most vociferous critics must admit that it was excellent value for money - worth every penny!, Unresolved,1

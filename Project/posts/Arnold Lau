Tuesday August 20th 2013 8:30 am -04:00,def trianglearea(b h):     return b * h / 2trianglearea(45)10.0So bh are parameters because theyre what you used to define the function while 45 are arguments because theyre what you used to call the function., Resolved,2
Thursday August 29th 2013 8:29 pm -04:00,Its also for the benefit of other people who might read your code. Code gets really large and confusing really fast and its almost impossible to follow without proper and clear documentation as to what it does. So even if the design of the code is clear in your head you still have to do proper documentation. You might actually have to go back to some code you wrote a year ago and then forget how your own code was designed., Unresolved,1
Monday September 9th 2013 12:22 am -04:00,I thought of a simple way that mostly just uses the operators from Week 1. Unfortunately it also uses the int built-in function which was Week 3...http://paste.debian.net/37244/,None,0
Monday September 9th 2013 12:25 am -04:00,EDIT: I figured out how to do it without using any concepts past Week 2! I replaced the int built-in function with the integer division operator.http://paste.debian.net/hidden/401d16c2/,None,1
Tuesday September 10th 2013 1:20 am -04:00,No problem Etienne,None,0
Tuesday September 10th 2013 10:49 am -04:00,Sorry Shannon! Ill explain the second one. Heres another link to it (the first link expired whoops): http://paste.debian.net/37943/Lets simplify the problem first: lets say all we wanted to do was take a number and round it to the nearest whole number. How would we do that without using the round function?The first thing we might think of is to simply cut off the decimal part of the number. For example 3.14 rounded to the nearest whole number is simply 3. 57.49 rounded to the nearest whole number is 57.We can cut off the decimal part of a number in two ways. The first way which we learned in week 3 is to use the int built-in function which converts any float into an int. The second way is to use the integer division operator. This is the double slash which we learned in week 1. This operator is like regular division but ignores the remainder and gives only a whole number. What you can do is take the number and use the integer division operator to divide the number by 1. 3.14 // 1 will give 3. 57.49 // 1 will give 57.Theres a problem with this method however; what if we need to round up? 6.88 rounded to the nearest whole number is not 6 but 7. 43.51 rounded to the nearest whole number is not 43 but 44.The way to get around this is to remember that we round down whenever the decimal part of a number is below .5 whereas we round up if the decimal part of a number is .5 or above. So one trick we can use is to simply add .5 to the number we want to round up and then use the integer division operator or the int function on the result.Notice what happens for the four examples we gave above. 3.14 + 0.5 = 3.64 which via the // operator or the int function becomes 3. 57.49 + 0.5 = 57.99 which becomes 57.But 6.88 + 0.5 = 7.38 which becomes 7.43.51 + 0.5 becomes 44.01 which becomes 44.In short adding 0.5 to the number we want to round gives us a number whose whole part is precisely the nearest whole number to the original number we were working with.So your function would look like:def roundup(number):     return (number + 0.5) // 1Now the problem in the wiki has an additional layer of difficulty. We now want to be able to round the number to any number of decimal places we like. How do we do that?The way in which we do that is to first temporarily move the decimal point in the original number by the number of places we want. Then we can do the exact same thing we did above adding 0.5 and using the int function or operator. Then we move the decimal point back to where it used to be.Say we want to round the number 913.3574 to 2 decimal places. This would be 913.36.Step 1 is to move the decimal point of that number 2 places to the right so that the number becomes 91335.74. We can do this by multiplying that number by $$10^2$$. Note that 2 is the number of places so if for example we wanted to move the decimal point 3 places to the right that would be $$10^3$$ instead.Step 2 is to do what we did in the simpler version of the problem. Add 0.5 to 91335.74 to get 91336.24 and then use the int function or integer division operator to simply get 91336.Step 3 is to move the decimal point of that number 2 places back to the left so 91336 would become 913.36. This means we divide by $$10^2$$. And there you have it!Lets call the act of moving the decimal point a certain number of places to the right the scale variable which is what Etienne did. So the code would be:def roundup(number decimal_place):     scale = 10 ** decimal_place     return (((number * scale) + 0.5) // 1) / scaleI hope that helped Shannon :),None,0
Thursday September 26th 2013 8:43 pm -04:00,Glad I could help Shannon. I have to catch up with the class too I havent done Week 5 yet.,None,0
Saturday September 7th 2013 3:54 am -04:00,Ravi you said we only needed up to Week 3 lectures and for loop for this. What the heck is array and array.append? :)),None,0
Saturday September 7th 2013 2:47 am -04:00,Im trying to solve this problem with my programming experience being just this class and nothing else. Ive written something that almost works except for two hitches:1.) How do you call it? Can you create a function to do this that can print the numbers 1 to n or something? If the latter I have trouble figuring out what to put in the return statement. Right now Ive just been repasting the entire code into the shell everytime I want to run it.2.) How do you even get them all into one string? I think this is related to the 1st question since I still havent figured out what entity Im calling here (maybe because I dont fully understand how for loops work?) So far Ive just been able to print out a list of integers with certain integers being replaced by Fizz Buzz FizzBuzz etc.(I dont think I should paste sample code here it might ruin the thinking process for others but I can do so if thats all right),None,0
Saturday September 7th 2013 3:50 am -04:00,Thanks Etienne! Heres my code so far (not worrying about strings for now). Can anyone tell me whats wrong with this? ,None,0
Saturday September 7th 2013 4:06 am -04:00,Heres the basic loop I did. It displays the numbers in a list so I made the range (116) in order to not have a list that was way too large. 16 can easily be replaced by 101.,None,0
Saturday September 7th 2013 4:21 am -04:00,Oh wow I think I got it! Turns out it was just a problem with print vs return and indentation. BTW in order to solve the comma problem Denzel had above I just replaced them with exclamation points. Bonus is that it simulates a kids game better :),None,0
Sunday September 15th 2013 11:08 am -04:00,You have a spelling error in your function., Resolved,0

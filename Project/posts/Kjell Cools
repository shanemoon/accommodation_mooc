Wednesday August 28th 2013 4:06 pm -04:00,HelloI try to give some explanation. I first list the code I have written**************************************************************1 # Write your code here.2 3 def con_to_celsius(temp1):4           return (temp1 - 32)*5 /956 def usa_city_temp(city_name):7       return 7789 con_to_celsius(usa_city_temp(Atlanta))**************************************************************The numbers in front of each line are just the line numbers.I first define two functions:function con_to_celsius(temp1) returns the equivalent temperature in degrees Celsius of the input temperature temp1 in degrees Fahrenheitfunction  usa_city_temp(city_name) returns the temperature in degrees Fahrenheit in the city referred to by city_name. In order to keep this function as simple as possible the function always returns value 77 independent of the value of its argument (so independent of the city name)The quiz asks for a one-line expression that returns the temperature in degrees Celsius in Atlanta. The answer to this question is following expression:con_to_celsius(usa_city_temp(Atlanta))What happens when Python tries to evaluate this expression.the first thing Python notices is that this expression is a function call to the previously defined function con_to_celsius.  According to its function definition Python expects one argument. So Python goes looking for that one argument and finds that this argument is equal to           usa_city_temp(Atlanta)So Python notices that the argument is again a function call now a function call to another predefined function namely   usa_city_temp.  According to its function definition Python expects one argument. Looking for this argument Python finds out that this argument is         AtlantaA memory location with address id3 is reserved. The argument city_name holds address id3 and refers in this way to the value AtlantaNow the arguments refers to a value the function usa_city_temp can be evaluated. A memory location with address id4 is reserved.  for the return value. After evaluation the return value now has id4 and refers to value 77The return value of function call usa_city_temp(Atlanta) is now passed as argument to the function con_to_celsius. This means that the parameter temp1 of this function gets memory address id4 and refers to value 77Now this parameter is defined function con_to_celsius can be evaluated. A new memory location is reserved for the return value of this function meaning that return value gets address id5 and refers to value 25this value 25 is displayed in the python shell as result of the evaluation of the one-line expressionI hope that this explanation somewhat helps. , Unresolved,2
Thursday August 29th 2013 1:46 am -04:00,Hello Michaelthe function usa_city_temperature(city_name) you are using is a little bit strange in the sense that it is doing the opposite as the function that is defined in the quiz. According to the quiz the function usa_city_temperature takes a string as argument (referring to a name of a city) and returns a number (which refers to the temperature in degrees Fahrenheit in that city).Your function usa_city_temperature  takes an integer as argument referring to a temperature  (although the name of the argument is a little bit misleading as it is city_name) and returns a string which is a concatenation of the temperature and Seatlle.That is the reason why the nesting of your function calls is the inverse of the nesting of the function calls in my example., Unresolved,1

Sunday September 15th 2013 10:25 am -04:00,I defined the is_valid_sequence function as follows:def is_valid_sequence(dna):          (str) -> bool     Return True if and only if the DNA sequence is valid (that is it contains  no characters other than A T C and G).    >>> is_valid_sequence(ATCGGC)    True    >>> is_valid_sequence(ATCtGGC)    False    >>> is_valid_sequence(ATCDGGC)    False    >>> is_valid_sequence(ATCAAAACCCCCGCGCGCGGC)    True    >>> is_valid_sequence()    False        valid=True    if dna!=:        for char in dna:            if not char in ATCG:                valid=False    else:        valid=False            return validand checked it in IDLE against the five examples. The results are as they are expected but the autotester says student: test_a2.TestIsValidSequence.test_is_valid_sequence_zero_length meaning that according to the autotester the empty string returns Truebut when trying it again and again in IDLE the call is_valid_sequence() keeps returning False., Resolved,0
Sunday September 15th 2013 11:40 am -04:00,I see. I misunderstood. I am a biologist and in my mind and empty string HAVE TO be unvalid. So I coded expecting the function to return False in that case not true and when i read the fail explanation in the auto tester i undestood the return has to be false.After reading the first answer and re reading the explanation in the auto tester now I understand that i have to code to get a true return for the empty string (instead of False like I stated in my example comment).I will just take out the check for the empty string and will return true:valid=True    for char in dna:            if not char in ATCG:                valid=False     return validThanks!, Resolved,0

Saturday September 7th 2013 11:00 pm -04:00,yes but the return statement is not indented within the if statement- why doesnt this cause issue?, Unresolved,0
Saturday September 7th 2013 11:38 pm -04:00,Yea this still isnt making sense to me despite the clarification already in the thread. Can someone please expand?, Unresolved,0
Wednesday September 4th 2013 5:46 pm -04:00,I have completed get_hours and am getting back solid results.However I really dont know where to start for get_minutes (I understand the modulo concept- I think that the application of it is causing me issue).I dont understand how I am supposed to use the first function in get_hours to be called and then to display the # of minutes remaining after the # of hours have been calculated.Here is what i have so far for get_minutes.def get_minutes(minutes):        (int) -> int    >>> get_minutes(3800)    3    >>> get_minutes(3600)    0    minutes is a number of seconds since midnight. Return the    number of minutes that have elapsed since midnight.    Any help would be appreciated., Resolved,0
Wednesday September 4th 2013 10:12 pm -04:00,I understand that Nick thanks for your post. What I think Im struggling with is how to get the number of minutes from the number of seconds AFTER the number of hours in seconds has been deducted from the inputted # of seconds. Wouldnt a modulo be necessary in this situation? Again- applying it is just causing me issue.Thanks., Resolved,0
Thursday September 5th 2013 12:55 pm -04:00,I believe Ive figured it out- but I have a follow up question.When doing this it would make sense to minus the amount of hours (in seconds) from the inputted seconds through a modulo and then to divide by 60 to get the integer of minutes.But I seem to keep getting the correct answer by just modulo(ing) by 60 ie minutes % 60Why?, Resolved,0
Saturday September 7th 2013 9:36 pm -04:00,Any way to get these? Thanks!, Unresolved,0
Saturday September 7th 2013 11:56 pm -04:00,Consider this code:if temperature > 28:    if money > 0.99:        print(Im buying a lemonade.)    else:        print(Wheres the water fountain?)Select the code fragment(s) that are equivalent to the code fragment above.if temperature > 28 and money > 0.99:    print(Im buying a lemonade)elif temperature > 28 and money <= 0.99:    print(Wheres the water fountain?)if temperature > 28 and money > 0.99:    print(Im buying a lemonade)elif temperature > 28:    print(Wheres the water fountain?)if temperature > 28 and money > 0.99:    print(Im buying a lemonade)else:    print(Wheres the water fountain?)Okay. I believed that option 3 was the only correct instance of this. Why do options 1 and 2 state that that there can be a use case of the function in which the temp is above 28 (which initiates the if statement) but where is the water fountain is printed? In option 1: Does the temperature have to be above 28 for the function to get to the elif because the temperature being above 28 is necessary to initiate the function?In 2: Same deal? Just that the money isnt sufficient to buy?Confusing me.Thanks, Unresolved,2
Wednesday September 11th 2013 9:34 pm -04:00,I still dont understand the need for the modulo in this question? Can someone clarify?, Resolved,1
Tuesday September 10th 2013 5:43 pm -04:00,Thank you!, Pinned Approved Resolved,1
Tuesday September 10th 2013 5:53 pm -04:00,Thanks!, Pinned Approved Resolved,0
Tuesday September 10th 2013 7:32 pm -04:00,    for char in s:        if char in aeiouAEIOU:           vowels = vowels + charSo how does this work exactly?I get that char in s represents the variables in the string. But why does the value of char change on the line of the if statement?For characters in s if character in aeiouAEIOU add char to vowelsThis gets jumbled for me.Can someone please clarify?, Unresolved,0
Friday September 13th 2013 12:53 pm -04:00,The way that I went about getting this correct did not involve using the get_complement function within the get_complementary_sequence function. The reason being that the get_complement function required a singular parameter input and thus a singular return output. For get_complementary_sequence I rewrote an entirely new function with if/elif statements associated with an accumulator of the new returns, Resolved,0
Monday September 30th 2013 8:23 pm -04:00,Im completely stuck on this part of the assignment. This is what I have so far.def make_str_from_column(board column_index):     (list of list of str int) -> str    Return the characters from the column of the board with index column_index    as a single string.    >>> make_str_from_column([[A N T T] [X S O B]] 1)    NS        output =     for char in board[0:]:        if char in board[column_index]:            output = output + char            return output        Any help would be appreciated, Unresolved,0
Monday September 30th 2013 10:24 pm -04:00,Patrick that = exactly what im struggling with, Resolved,0

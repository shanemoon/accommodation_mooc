Thursday September 5th 2013 9:15 pm -04:00,The explanation would better readConsider what happens when both grades are failing grades or both grades are passing grades.If both grades are failing this code will incorrectly print only the 2nd failing grade2.  If both grades are passing it will incorrectly print only the 1st passing grade1., Unresolved,0
Sunday September 22nd 2013 8:46 pm -04:00,I understand Karis explanation but am still confused.  According to Marthas comment above the function (in this case sort rearranges the list and you can see this rearrangement when you ask to look at the list again.  However this does not happen with the numbers using the reverse() method example:In the shell if I say:>>> numbers = [1 4 3]>>> print(numbers)[1 4 3]>>> numbers[1 4 3]then say:>>> numbers = numbers.reverse()>>> print(numbers)None>>> numbers>>>To be consistent with Marthas example I would have expected this last line to instead show>>> [3 4 1]What am I missing?  , Resolved,0
Wednesday September 25th 2013 10:13 pm -04:00,Thanks Kari your explanation is very helpful.  I bopped myself over the head a few times and now I get it.The key is what you said in step 2:  ...overwriting its current content., Resolved,0
Friday September 20th 2013 10:24 am -04:00,KInd of the same but another variation:  is one of the following better?  same?while not (answer == yes or answer == no):vs. while answer != yes or answer != no, Unresolved,0
Friday October 4th 2013 10:33 am -04:00,This is somewhat off the main topic of the lecture but at the very end of the video Professor Jen opens the file for reading in the Python shell to test on read_grades function she created.Doesnt opening a file require you to specify if it is being opened for reading by using a r at the end open function?She wrote:gradesfile = open(path.txt)I thought you needed to write:gradesfile = open(path.txt r)???, Unresolved,0

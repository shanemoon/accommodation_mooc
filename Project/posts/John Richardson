Saturday September 21st 2013 10:13 pm -04:00,Im calling is_valid_sequence on all of my arguments and raising a ValueError if anything fails.This causes the auto-grader to fail the question because an error was (intentionally) thrown.What should I be doing instead of the above?, Resolved,0
Saturday September 21st 2013 10:47 pm -04:00,@Anon:     raise ValueError(Invalid Sequence)     I thought about using some kind of string value that represented an invalid argument but it seems preferable to fail obnoxiously      than silently@Tom:    Would you look at that. You can return whatever you like in Python. Im used to public string blah(args) etc.     Ill refactor to return False.   Thanks!, Resolved,0
Sunday September 22nd 2013 1:57 pm -04:00,Thanks for the help guys! I was able to bump my score up a few points on the auto-grader.@Nice Anonymous:It looks like there is a try-except block in python that is very similar to try-catch etc for writing code to handle an exception or re-throw it if necessary.Use me as an example and dont try this in one of the assignments for class. ^^@Comic Book Store Owner:I probably wasnt explicit enough in my original question but I think you might have missed the point. Clearly I had done something wrong to wind up in a pickle with the auto-grader. I was hoping someone would have advice to mitigate the damage that was already done which they did. Finding the exact clause I had overlooked in the FAQ was less important than knowing where to go now that I found myself in the dilemma of having overlooked it., Resolved,0
Monday September 23rd 2013 9:43 pm -04:00,This is actually a great example of how returning whatever you like can be dangerous.You always want to make sure you use the return keyword to return the value youre looking for and not just print it to the console.So in your example if nucleotide in dna:         print(dna.count(nucleotide))    else:         print(0)Those print statements should use return instead of print so any calling methods will receive the expected value. In this case youve written the equivalent of a C/java void method and returned nothing.In the other example you gave I believe youre returning string representations of True and False. Im clearly no Python expert but I believe the boolean values are actually integers in Python. You can use the True and False keywords to return them respectively so in the case of your example it would look like this (without the single quotes included in your code above): if dna1 > dna2:      return True    else:      return False, Resolved,0
Monday September 23rd 2013 9:49 pm -04:00,Another quick note on bools...As discussed in the exercises boolean expressions like dna1 > dna2 represent the outcome of the evaluation and can actually be return values themselves like so:return dna1 > dna2This would return True or False depending on the values in dna1 and dna2., Resolved,0

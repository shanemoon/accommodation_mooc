Sunday August 25th 2013 9:23 am -04:00,Hi SavezI have got all my answers correctly.. Can you please post the question along with the options so that I can help you out? RegardsAdharsh, Resolved,0
Sunday September 1st 2013 2:16 am -04:00,Same with my case as well. Im getting the final score for the consolidated weekly assignment as 42/41, Resolved,2
Saturday September 14th 2013 3:29 am -04:00,Finding the second occurrence is very simple provided you clearly understand what the str.find() does. Let me throw some light on this for those of you who are still find it confusing.The str.find() function in Python returns the index of the first instance of the matching pattern and this search for the pattern by default starts from the left at index 0. This means that if str=divisibility and you evaluate str.find() the result that you would see is 1. Having found the first instance of the letter i in the string to find the second instance you can apply the same find() function on the string with a slight modification. The logic here is that you can tell Python that instead of finding the occurrence of the letter i in the string from index 0 find the first index of the alphabet starting from (index+1) where index refers to the first occurrence of the alphabet within the string. So finding the first instance of the pattern from the index of the already matched pattern is equivalent to finding the second occurrence of the pattern in the given string. We can combine the above two steps i.e finding the first occurrence of the pattern from index 0 finding the first occurrence of the pattern starting from (index+1) into a single nested find statement.So if we represent the word divisibility by the str s1 and the alphabet i by the str s2 to find the second instance of the letter i the nested find statement is as follows:[~ep]I hope you find this explanation useful.RegardsAdharsh Santhanam, Resolved,0
Sunday September 15th 2013 7:52 am -04:00,Hi Charles You can directly use the len() function to determine which of the two strings are longer. Though you can always check if the difference in length of the two strings is greater than zero to determine the longer of the given two strings this would be redundant since you can directly apply the len() function on both sides to get the desired output directly. Ensure that the two strings are not given within single quotes as these would mean that the strings are variables. But the desired result is to check the values passed into the string and hence the quotes should not be used during the comparison.RegardsAdharsh Santhanam, Resolved,0
Sunday September 15th 2013 7:47 am -04:00,An error free Python code does not mean that you have got the logic right? Rather it simply means that youre code is free from any syntactical errors. Python cannot check for logical inconsistencies as required in the assignment. So there are chances that you have an error free code in Python and you might still end up not getting the full marks for the question. To avoid this ensure that you have implemented the logic to get the desired output(as stated in the assignments)? Regards.Adharsh Santhanam, Resolved,2

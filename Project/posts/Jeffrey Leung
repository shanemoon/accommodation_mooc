Sunday August 18th 2013 9:50 pm -04:00,Hello I am from California USA.  I previously took a python course but dropped out as I did not have enough bandwidth complete the course.  Which is why I am in  this course =)Ive worked a little bit with C# and dove a little into ruby.  I would like to eventually use python for my work and Django for web dev as my hobby.,None,3
Sunday August 18th 2013 10:32 pm -04:00,Are you downloading the latest version of python?  I am using windows 8 and have no problems installing/running, Resolved,3
Monday August 19th 2013 1:28 am -04:00,There isnt much difference with the exception of syntax.  There may be added extras or libraries to python3 but I highly doubt we would be using it in this class.For example the print statement for python 2 is: print Hello World!While python3 is:print(Hello World!), Resolved,1
Tuesday August 20th 2013 12:14 am -04:00,Awesome! I live in the East Bay.  Hope to meet everyone!,None,0
Saturday August 31st 2013 4:53 pm -04:00,I think i have confused myself now.The question asks to return the number of minutes that have passed since midnight.For the get_minute(seconds) function  what I have done is take my input (seconds) and plug it into get_hours(seconds) method then multiply it by 60 to get minutes.  My get_hours(seconds) was marked as correct.Ive also tested it several timesThese were my results:(3600 seconds is 1 hour since midnight or 60 minutes)>>> get_minutes(3600)60(7200 seconds is 2 hours since midnight which is 120 minutes)>>> get_minutes(7200)120(10800 is 3 hours since midnight which is 180 seconds)>>> get_minutes(10800)180Any suggestions or advices would really be appreciated!Thanks!, Resolved,0
Saturday August 31st 2013 5:15 pm -04:00,get_minutes(3660) returns a value of 60.  I used int division rather than float., Resolved,0
Saturday August 31st 2013 5:21 pm -04:00,oh opps your right!, Resolved,0
Saturday August 31st 2013 5:24 pm -04:00,I think i have been misunderstanding the question.  I thought it wanted me to convert the seconds to minutes then from minutes from midnight.I made the adjustments and now works.Thanks!, Resolved,0
Tuesday September 3rd 2013 11:07 pm -04:00,I think the problem with a lot of this is not the syntax of the code its more about figuring out what is needed to be done.  For example in the handout It gave is a already defined function:def to_24_hour_clock(hours):       return hours % 24We know that % is a division that gives us a remainder but a lot of people dont know how to use it or when to use it.  I also found that the description was hard to understand.  I was actually fustrated because I been misunderstanding step 6maybe this will help you with the steps:step 2: Complete the code for function: seconds_differenceHere is the original description:  The parameters are times in seconds. Return how many seconds later the second time is than the first. Please note: in a1.py we have provided the completed docstring for this function including example function calls with the expected return values.This basically means return the amount of seconds that the second number is greater than the first number.  Step 3: The parameters are times in seconds. Return how many hours later the second time is than the first. (Please note: in a1.py we have provided the completed docstring for this function including example function calls with the expected return values.)For this function it takes in 2 different times in seconds.  How many seconds is the second value greater than the first number?  Then convert that number into hours.  1 hour is 3600 seconds.  step 4: The first parameter is a number of hours the second parameter is a time in minutes (between 0 and 59 inclusive) and the third parameter is a time in seconds (between 0 and 59 inclusive). Return the combined time as a float value. (Please note: in a1.py we have provided the completed docstring for this function including example function calls with the expected return values.)This one is more difficult.  It gives us 3 numbers as parameters.  the first paremeter is hours second minutes and third is seconds. They want us to spit out a number that is in decimal format.  Here is a tip.  Hours be left untouched.  for minutes you need to figure out how to many seconds are in a minute and for seconds you need to figure out how many seconds is in 1 hour.  Then add those numbers.  Also make sure you are using the correct division for float.step 5: They want 3 things.  get_hours get_minutes get_seconds.  All three functions wants us to return the amount of time that has a parameter of seconds.  It wants us to convert the seconds to hours since midnight.  Lets look at the first one get_hours:We know that there is 3600 seconds in 1 hour.  How do we convert seconds to hours?  You need to divide some numbers together to get the converted amount in hours.  Next we have a already completed function: to_24_hour_clock(hours) that takes in the time in hours (hint hint).  Something will just need to be inputted into that parameter to get the correct result.Now for get_minutes: it is similiar to the problem above but it only wants the minutes portion of the time.  For example 4007 seconds is 1 hour 6 minutes 47 seconds. get_minutes will return the minutes portion which is 6 minutes (reference: Allan Orrick).get_seconds is similiar to get_minutes except it wants the seconds portion of the time.  you will need to take the number in seconds and do a very special division.  Look at to_24_hour_clock function works.  Then look at how many minutes are in 1 hour.for the last 2 functions:time_from_utc(utc_offset time):it is asking: Return time at UTC+0 where utc_offset is the number of hours away from UTC+0.Basically this means that they want the DIFFERENCE in time between between the offset from UTC 0.  I think of it like this.  Lets pretend we live in the middle of the world and our time is set where everything starts.  Our time zone is at 0.  It never changes.  Everyone else time zone is derived from us.  Japan is 2 hours ahead from us.  If it is currently 11:00 at our time zone japan must be 13:00 their time.  How much time has passed between us?The second function:time_from_utc(utc_offset time).  It says: The first parameter is a UTC offset specifying a time zone and the second parameter is a time in time zone UTC+0. Return the equivalent time in the time zone specified by utc_offset. Using the example above.  Japan is +2 hours ahead of us.  and we are 14:00 time.  What should the time in japan be?Hopefully this will help you.  Please keep trying!, Unresolved,8
Wednesday September 4th 2013 12:44 am -04:00,It looks like your function doesnt have a return statement.  Your return statement should be in a function.  A return statement does 2 things:1) it ends the function2) It allows the function to spit out a data.It should look something like this:def myFunction(nun1 num2):      return num1 + num2>>> myFunction(100 200)>>> 300In this example myFunction takes in 2 numbers of 100 and 200. Then it calculates the return statement that was defined in the function and spits it back out.  A reason why we would use a return statement is because we can assign a function to a variable.  For example:>>> myNumers = myFunction(100 200)in that example the function will kick off returning a value of 300 and assigns 300 to myNumbers variable.Also note in python indentation is important.  By having your code indented it lets python know that statement is part of the function., Unresolved,1
Wednesday September 4th 2013 12:50 am -04:00,You are soo close!You have the right formula!  For your function get_hours we know that to_24_hour_clock(hours) already does: hours % 24.  And you have already did the caculation for converting seconds to hours.Do you see something that is unnecessary in your get_hours function?, Unresolved,0

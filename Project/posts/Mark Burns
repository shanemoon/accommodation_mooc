Tuesday September 3rd 2013 7:58 pm -04:00,That seems to be the correct result for get_hours. So why do you think there is a problem calling to_24_hour_clock? oh I guess I misunderstood.To call a function you type its name and supply the parameters/arguments just like you show get_hours(87699000)>>> to_24_hour_clock(24360) 0>>>to_24_hour_clock(get_hours(87699000))0, Unresolved,0
Monday September 16th 2013 4:42 pm -04:00,can someone explain the Print() doesnt create a stack frame?my sequence would be:mainprint()   Print calls g(x)for me that seems to be 3 -----------------------------------------edit - ok I was stupid too:   Apparently the parser evaluates g(x) then passes the return value as the argument rather than passing g(x)which is why its 2 , Unresolved,0
Monday September 16th 2013 4:45 pm -04:00,A stack frame is theoretically created for every function call.where the names of the functionsvariables etc. are stored (not the values)_main_ (this is where the program starts always (also called the global frame)when the function call g(x) is made a new stack frame is created for it , Unresolved,0
Monday September 16th 2013 8:14 pm -04:00,I took it as that same case ... since it seems to indicate that empty string isnt a nucleotide I also checked to make sure that the empty string returned False - No matter I changed it and resubmitted.I also would have used is_valid_sequence() to check the parameters for correct values before allowing the other functions to operate but alas this is also not in the assignment. , Unresolved,0
Monday September 16th 2013 8:23 pm -04:00,ok well so many seemed to have include some form of  if dna= then return false.Is it because we considered what a logical biologist would assume?Is it that many of us have some experience in understanding the user intended expectation rather than attempting to follow the specification to the letter? (so you dont have to write it a 2nd time - ) , Unresolved,0
Monday September 16th 2013 9:09 pm -04:00,The parameter is a potential DNA sequence. Return True if and only if the DNA sequence is valid (that is it contains no characters other than A T C and G).    There are at least 2 ways to approach this. One way is to count the number of characters that are not nucleotides and then at the end check whether there were more than zero. Another way is to use a Boolean variable that represents whether you have    found a non-nucleotide character; it would start off as True and would be set to False if you found something that wasnt an A T C or G.    You should construct examples that contain only As Ts Cs and Gs and you should also create examples that contain other characters. A string is not a valid DNA sequence if it contains lowercase    letters.Im not exactly sure that the spec indicates return TRUE Iff includes  ∈ \in  {no characters other than A T C and G}or that  You should construct examples that contain only As Ts Cs and Gs implies that  is valid either, Unresolved,0

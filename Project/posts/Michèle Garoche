Monday September 2nd 2013 3:08 pm -04:00,Meanwhile you may have a look at complex (in __builtins__ remember from first week dir(__builtins__) and then help(whatever)., Unresolved,0
Tuesday August 27th 2013 7:26 pm -04:00,Cheating a bit with itertools:from itertools import product repeatinput = 2for i in [.join(list(v)) for v in product(.join([chr(i) for i in range(6591)]) repeat=input)]:	print(i),None,0
Wednesday August 28th 2013 8:23 am -04:00,Thanks Ive corrected the post.No Im not a seasoned Python programmer. Ive just begun to learn it at the beginning of the year.,None,0
Wednesday August 28th 2013 9:36 am -04:00,It works also with find Im not sure what is the recommended way to do it between == or find:def is_palindrome(string):	return This is  + ( if string.lower().find(string.lower()[::-1]) ==  0 else not ) + a palindrome,None,0
Friday August 30th 2013 2:58 am -04:00,I may eventually help., Approved,1
Monday September 2nd 2013 2:02 am -04:00,You should in no case remove older versions of Python installed by the system there are used by the system.You may remove the versions you install.(See http://docs.python.org/3/faq/installed.html for explanations in particular last section at the bottom of the page)., Unresolved,0
Tuesday September 3rd 2013 5:18 am -04:00,Launch idle3 from the terminal then from the python shell File -> Open (cmd-O) and choose the python script you have already written or File -> New window(cmd-N)  to open a new place to script.Then put them side to side the focus will be lost but not the visible view.Thereafter you have to save the new file or save the old file if you have changed it run the module (ctrl-F6) and type whatever you run in the python shell.Each time you change the script (not the python shell) you should save it run module before the change is seen in the python shell., Resolved,0
Monday September 2nd 2013 3:18 pm -04:00,It is true that a student whose mark is 50 passed but it is not true that when the grade is less than or equal to 50 the student passed. See it really as you would express it in English you would probably say student passed when grade is greater or equal to 50. That is the whole expression should be true not some part of it.And no boolean does not deal only with int you have example with float in the videos and also with strings etc..., Unresolved,0
Monday September 2nd 2013 3:23 pm -04:00,For those of you like me who never heard of this formula or who may have completely forgotten about it from a far past here is a link with algebra and geometric proof (this one is particularly beautiful):http://jwilson.coe.uga.edu/emt725/Heron/Heron.html , Resolved,5
Monday September 2nd 2013 8:30 pm -04:00,Very fun indeed.def collatz_sequence(n):   (int) -> [int int ...]  Return the hailstone sequence corresponding to n as a list.  Precondition: n >= 0  >>> collatz_sequence(1)  [1]  >>> collatz_sequence(2)  [2 1]    coll =                 # to produce a list as return  while n > 1:    coll.append(n)         # append n to the list    n = next_collatz(n)    # find the next number in sequence  coll.append(n)           # dont forget to add the last (or unique) number  return colldef next_collatz(n):   (int) -> int  Return the next number of a hailstone sequence defining by:  f(n) = n / 2       | n % 2 == 0  f(n) = 3 * n + 1 | n % 2 == 1  Precondition: n > 1 >>> next_collatz(2) 1 >>> next_collatz(3) 10   if n % 2 == 0:    return n // 2              # return an integer  else:    return 3 * n + 1def find_longest_collatz():   () -> (int intint)  Return a tuple consisting of the:     - number     - length of corresponding hailstone sequence     - biggest number in the hailstone sequence  among all hailstone sequences generated from 0<= number < 1000000    coll =                       # to store the sequence  maxlen = 0                     # to store the length of the sequence  maxi = 0                       # to retrieve the number generating the sequence  for i in range(1000000):    u = collatz_sequence(i)      # calculate the sequence    if len(u)> maxlen:           # compare the length of the sequence to previous one      maxlen = len(u)            # replace the max by the current one if greater      coll = u                   # remember the sequence      maxi = i                   # remember the number generating the sequence  # sort the sequence in reverse order and pick the first element  return (maxi len(coll) sorted(coll reverse=True)[0])It took 70 seconds to produce the result on my Mac.,None,1
Monday September 2nd 2013 9:17 pm -04:00,LaurentiuAt the beginning Ive used / to divide but then I obtained in the list a float thats why I changed it to //. (Python3 here).I forgot to add the result here it is:find_longest_collatz()(837799 525 2974984576),None,1
Thursday September 5th 2013 1:52 am -04:00,Same here.,None,0
Thursday September 5th 2013 1:29 am -04:00,Interesting. Have you posted your code somewhere Anonymous?,None,0
Monday September 2nd 2013 10:01 pm -04:00,Watch your syntax especially the parentheses., Resolved,1
Tuesday September 3rd 2013 4:53 am -04:00,count_letters (count_vowels(word)...)is wrong; there should be no space between the name of a function and the parenthesis which begins the list of arguments.It should be no matter what the question is:count_letters(count_vowels(word)...), Resolved,0
Tuesday September 3rd 2013 5:01 am -04:00,Yes you have to use some special options but the best is to use the visualizer already prepared with the right options located in Resources (fifth link on the left - just under Discussion Forums): https://class.coursera.org/programming1-002/wiki/view?page=Resources., Unresolved,0
Tuesday September 3rd 2013 5:24 am -04:00,lol hopefully for the second one ;-),None,0
Tuesday September 3rd 2013 8:47 pm -04:00,Apart from the lack of empty line after the definition of the function f I dont see anything obviously wrong in your code.Check eventually that the code is properly indented., Unresolved,0
Friday September 6th 2013 4:09 pm -04:00,You need to have a separator between number this can probably be best done with a command line utility like sed. It is very efficient. And you may perfectly call it from python.You can use strip to get rid of the last invisible characters at the end of line list and open to read line by line.Then with list dictionary and comprehensions you can do whatever you want.,None,0
Wednesday September 11th 2013 5:41 am -04:00,There is an interesting thread about Atkins sieve here: http://compoasso.free.fr/primelistweb/page/prime/atkin_en.php,None,0
